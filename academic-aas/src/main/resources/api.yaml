openapi: 3.0.1
info:
   version: 1.0.0
   title: Contact Application API
   description: This is a sample Spring Boot RESTful service using springdoc-openapi and OpenAPI 3.
servers:
-  url: http://localhost:8080
   description: Generated server url
tags:
-  name: contact
   description: the Contact API
paths:
   /api/contacts/{contactId}:
      get:
         tags:
         - contact
         summary: Find contact by ID
         description: Returns a single contact
         operationId: findContactById
         parameters:
         -  name: contactId
            in: path
            description: Id of the contact to be obtained. Cannot be empty.
            required: true
            schema:
               type: integer
               format: int64
         responses:
            '200':
               description: successful operation
               content:
                  application/json:
                     schema:
                        $ref: '#/components/schemas/Contact'
                  application/xml:
                     schema:
                        $ref: '#/components/schemas/Contact'
      put:
         tags:
         - contact
         summary: Update an existing contact
         operationId: updateContact
         parameters:
         -  name: contactId
            in: path
            description: Id of the contact to be update. Cannot be empty.
            required: true
            schema:
               type: integer
               format: int64
         requestBody:
            description: Contact to update. Cannot null or empty.
            content:
               application/json:
                  schema:
                     $ref: '#/components/schemas/Contact'
               application/xml:
                  schema:
                     $ref: '#/components/schemas/Contact'
            required: true
         responses:
            404:
               description: Contact not found
            405:
               description: Validation exception
            400:
               description: Invalid ID supplied
            200:
               description: successful operation
      delete:
         tags:
         - contact
         summary: Deletes a contact
         operationId: deleteContactById
         parameters:
         -  name: contactId
            in: path
            description: Id of the contact to be delete. Cannot be empty.
            required: true
            schema:
               type: integer
               format: int64
         responses:
            404:
               description: Contact not found
            200:
               description: successful operation
      patch:
         tags:
         - contact
         summary: Update an existing contact's address
         operationId: updateAddress
         parameters:
         -  name: contactId
            in: path
            description: Id of the contact to be update. Cannot be empty.
            required: true
            schema:
               type: integer
               format: int64
         requestBody:
            description: Contact's address to update.
            content:
               '*/*':
                  schema:
                     $ref: '#/components/schemas/Address'
            required: true
         responses:
            404:
               description: Contact not found
            200:
               description: successful operation
   /api/contacts:
      get:
         tags:
         - contact
         summary: Find Contacts by name
         description: Name search by %name% format
         operationId: findAll
         parameters:
         -  name: page
            in: query
            description: Page number, default is 1
            required: false
            schema:
               type: integer
               format: int32
               default: 1
         -  name: name
            in: query
            description: Name of the contact for search.
            required: false
            schema:
               type: string
         responses:
            200:
               description: successful operation
               content:
                  application/json:
                     schema:
                        type: array
                        items:
                           $ref: '#/components/schemas/Contact'
                  application/xml:
                     schema:
                        type: array
                        items:
                           $ref: '#/components/schemas/Contact'
      post:
         tags:
         - contact
         summary: Add a new contact
         operationId: addContact
         requestBody:
            description: Contact to add. Cannot null or empty.
            content:
               application/json:
                  schema:
                     $ref: '#/components/schemas/Contact'
               application/xml:
                  schema:
                     $ref: '#/components/schemas/Contact'
            required: true
         responses:
            201:
               description: Contact created
               content:
                  '*/*':
                     schema:
                        $ref: '#/components/schemas/Contact'
components:
   schemas:
      Address:
         required:
         - id
         - postalCode
         type: object
         properties:
            id:
               type: integer
               description: Unique identifier of the Contact.
               format: int64
               example: 1
            address1:
               maxLength: 50
               minLength: 0
               type: string
               description: Address line 1 of the contact.
               example: '888'
            address2:
               maxLength: 50
               minLength: 0
               type: string
               description: Address line 2 of the contact.
               example: San Angeles
            address3:
               maxLength: 50
               minLength: 0
               type: string
               description: Address line 3 of the contact.
               example: Florida
            postalCode:
               maxLength: 20
               minLength: 0
               type: string
               description: Postal code of the contact.
               example: '32106'
      Contact:
         required:
         - id
         - name
         type: object
         properties:
            id:
               type: integer
               description: Unique identifier of the Contact.
               format: int64
               example: 1
            name:
               maxLength: 100
               minLength: 0
               type: string
               description: Name of the contact.
               example: Jessica Abigail
            phone:
               maxLength: 25
               minLength: 0
               pattern: ^\+?[0-9. ()-]{7,25}$
               type: string
               description: Phone number of the contact.
               example: '62482211'
            email:
               maxLength: 100
               minLength: 0
               type: string
               description: Email address of the contact.
               example: jessica@ngilang.com
            address1:
               maxLength: 50
               minLength: 0
               type: string
               description: Address line 1 of the contact.
               example: '888'
            address2:
               maxLength: 50
               minLength: 0
               type: string
               description: Address line 2 of the contact.
               example: San Angeles
            address3:
               maxLength: 50
               minLength: 0
               type: string
               description: Address line 3 of the contact.
               example: Florida
            postalCode:
               maxLength: 20
               minLength: 0
               type: string
               description: Postal code of the contact.
               example: '32106'
            note:
               type: string
               description: Notes about the contact.
               example: Meet her at Spring Boot Conference